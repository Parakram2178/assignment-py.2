{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "38551d0d-aae5-45ed-87a1-d51f4a09bcea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter the number: 95\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Grade A\n"
     ]
    }
   ],
   "source": [
    "# QUESTION=1\n",
    "marks=int(input(\"Enter the number:\"))\n",
    "if marks > 90:\n",
    "    print(\"Grade A\")\n",
    "elif marks > 80 and marks <=90:\n",
    "    print(\"Grade B\")\n",
    "elif marks >= 60 and marks <=80:\n",
    "    print(\"Grade C\")\n",
    "else:\n",
    "    print(\"Grade D\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6c7ede03-b0e5-4b28-89eb-1d57709f053c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter amoount 33000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5% Tax\n"
     ]
    }
   ],
   "source": [
    "#QUESTION=2\n",
    "cost_price=int(input(\"enter amoount\"))\n",
    "if cost_price > 100000:\n",
    "               print(\"15% Tax\")\n",
    "elif cost_price >= 50000 and cost_price <= 100000:\n",
    "               print(\"10% Tax\")\n",
    "elif cost_price < 40000 :\n",
    "               print(\"5% Tax\")\n",
    "               \n",
    "\n",
    "               "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5f6a4aa9-b366-4362-9317-f05919e6a9fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "#QUESTION=3\n",
    "A={\"Delhi\":\"Red fort\",\"Agra\":\"Taj Mahal\",\"Jaipur\":\"Jal Mahal\"}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e64c63c7-1cf6-4176-865f-4aaba46b28bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Red fort'"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "A[\"Delhi\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "dd62c009-ff04-4f33-b8ca-954ec9675de6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Taj Mahal'"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "A[\"Agra\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "26e26fd8-28ce-460e-83fa-62c9df0a5354",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Jal Mahal'"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "A[\"Jaipur\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ed50f8b2-f041-4d97-87de-6009072bf5ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "# QUESTION 4\n",
    "def divide_by_3(number):\n",
    "    count=0\n",
    "    while number > 10:\n",
    "        number=number/3\n",
    "        count=count+1\n",
    "    return count\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "3efbf1fa-2adf-42e2-a306-3f9f8776b757",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n"
     ]
    }
   ],
   "source": [
    "print(divide_by_3(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b882973c-0499-4981-8004-1c49b8387aaa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n",
      "10\n"
     ]
    }
   ],
   "source": [
    "# QUESTION 5\n",
    "''' while loop is used to repeat code as long condition specified the while condition'''\n",
    "a=0\n",
    "while a <= 10:\n",
    "    print(a)\n",
    "    a=a+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "053ec87f-9620-4a5c-912a-09f8c3627950",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "*\n",
      "**\n",
      "***\n",
      "****\n",
      "*****\n"
     ]
    }
   ],
   "source": [
    "# QUESTION 6\n",
    "rows=5\n",
    "for i in range(1,rows + 1):\n",
    "    for j in range(i):\n",
    "        print(\"*\", end=\"\")\n",
    "    print(\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "a45eb30c-4706-413d-b389-c2517cb7d11b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "*****\n",
      "****\n",
      "***\n",
      "**\n",
      "*\n"
     ]
    }
   ],
   "source": [
    "rows=5\n",
    "for i in range(rows,0,-1):\n",
    "    for j in range(i):\n",
    "        print(\"*\",end=\"\")\n",
    "    print(\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "e48b40ed-935d-4df2-8c91-4a0af00794e0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    *\n",
      "   **\n",
      "  ***\n",
      " ****\n",
      "*****\n"
     ]
    }
   ],
   "source": [
    "row=5\n",
    "for i in range(1,rows+1):\n",
    "    for j in range(rows-i):\n",
    "        print(end=\" \")\n",
    "    for j in range(i):\n",
    "        print(\"*\",end=\"\")\n",
    "    print(\"\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "dcb67256-d10d-4de4-bb28-d95dae507774",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10\n",
      "9\n",
      "8\n",
      "7\n",
      "6\n",
      "5\n",
      "4\n",
      "3\n",
      "2\n",
      "1\n"
     ]
    }
   ],
   "source": [
    "#QUESTION=6\n",
    "number=10\n",
    "while number>=1:\n",
    "    print(number)\n",
    "    number=number-1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "3b034f47-1dfd-47ec-83c8-b4e1c6088c3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10\n",
      "9\n",
      "8\n",
      "7\n",
      "6\n",
      "5\n",
      "4\n",
      "3\n",
      "2\n",
      "1\n"
     ]
    }
   ],
   "source": [
    "#Question=8\n",
    "number=10\n",
    "while number>=1:\n",
    "    print(number)\n",
    "    number=number-1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "59bf1888-14e3-44a0-8041-0f9584b295f6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
